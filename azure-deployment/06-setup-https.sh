#!/bin/bash

# Script para configurar HTTPS com Azure Application Gateway
# Este script configura SSL/TLS para a aplica√ß√£o usando certificado gerenciado pelo Azure

# Vari√°veis de configura√ß√£o
RESOURCE_GROUP="rg-prontuario-medical"
LOCATION="brazilsouth"
DOMAIN_NAME="eprontuario.trafficmanager.net"

# Application Gateway
APP_GATEWAY_NAME="agw-prontuario-medical"
PUBLIC_IP_NAME="pip-prontuario-gateway"
VNET_NAME="vnet-prontuario-medical"
SUBNET_NAME="subnet-gateway"

# Container Instances (backends)
API_BACKEND_FQDN="prontuario-api-1758591010.brazilsouth.azurecontainer.io"
WEB_BACKEND_FQDN="prontuario-web-1758592432.brazilsouth.azurecontainer.io"

echo "üîí Configurando HTTPS com Azure Application Gateway..."

# Verificar se j√° existe uma VNet
echo "üìù Verificando rede virtual..."
VNET_EXISTS=$(az network vnet show --resource-group $RESOURCE_GROUP --name $VNET_NAME --query "name" --output tsv 2>/dev/null)

if [ -z "$VNET_EXISTS" ]; then
    echo "üåê Criando rede virtual..."
    az network vnet create \
        --resource-group $RESOURCE_GROUP \
        --name $VNET_NAME \
        --address-prefix 10.0.0.0/16 \
        --subnet-name $SUBNET_NAME \
        --subnet-prefix 10.0.1.0/24
else
    echo "‚úÖ Rede virtual j√° existe"
    # Verificar se subnet existe
    SUBNET_EXISTS=$(az network vnet subnet show --resource-group $RESOURCE_GROUP --vnet-name $VNET_NAME --name $SUBNET_NAME --query "name" --output tsv 2>/dev/null)
    
    if [ -z "$SUBNET_EXISTS" ]; then
        echo "üåê Criando subnet para Application Gateway..."
        az network vnet subnet create \
            --resource-group $RESOURCE_GROUP \
            --vnet-name $VNET_NAME \
            --name $SUBNET_NAME \
            --address-prefix 10.0.1.0/24
    else
        echo "‚úÖ Subnet j√° existe"
    fi
fi

# Criar IP p√∫blico para Application Gateway
echo "üåê Criando IP p√∫blico para Application Gateway..."
az network public-ip create \
    --resource-group $RESOURCE_GROUP \
    --name $PUBLIC_IP_NAME \
    --allocation-method Static \
    --sku Standard \
    --dns-name agw-prontuario-$(date +%s)

# Obter o FQDN do IP p√∫blico
AGW_FQDN=$(az network public-ip show --resource-group $RESOURCE_GROUP --name $PUBLIC_IP_NAME --query "dnsSettings.fqdn" --output tsv)
echo "üîó Application Gateway FQDN: $AGW_FQDN"

# Criar Application Gateway com configura√ß√£o b√°sica
echo "üöÄ Criando Application Gateway..."
az network application-gateway create \
    --resource-group $RESOURCE_GROUP \
    --name $APP_GATEWAY_NAME \
    --location $LOCATION \
    --vnet-name $VNET_NAME \
    --subnet $SUBNET_NAME \
    --public-ip-address $PUBLIC_IP_NAME \
    --http-settings-cookie-based-affinity Disabled \
    --http-settings-port 80 \
    --http-settings-protocol Http \
    --frontend-port 80 \
    --sku Standard_v2 \
    --min-capacity 1 \
    --max-capacity 2 \
    --priority 1000

echo "‚è≥ Aguardando Application Gateway estar pronto..."
sleep 60

# Configurar backend pools
echo "üì¶ Configurando backend pools..."

# Backend pool para API
az network application-gateway address-pool create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "api-backend-pool" \
    --servers $API_BACKEND_FQDN

# Backend pool para Web
az network application-gateway address-pool create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "web-backend-pool" \
    --servers $WEB_BACKEND_FQDN

# Configurar health probes
echo "üè• Configurando health probes..."

# Health probe para API
az network application-gateway probe create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "api-health-probe" \
    --protocol Http \
    --host $API_BACKEND_FQDN \
    --path "/api/pacientes" \
    --interval 30 \
    --timeout 120 \
    --threshold 3

# Health probe para Web
az network application-gateway probe create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "web-health-probe" \
    --protocol Http \
    --host $WEB_BACKEND_FQDN \
    --path "/" \
    --interval 30 \
    --timeout 120 \
    --threshold 3

# Configurar HTTP settings
echo "‚öôÔ∏è Configurando HTTP settings..."

# HTTP settings para API
az network application-gateway http-settings create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "api-http-settings" \
    --port 8080 \
    --protocol Http \
    --cookie-based-affinity Disabled \
    --timeout 120 \
    --probe "api-health-probe" \
    --host-name $API_BACKEND_FQDN

# HTTP settings para Web  
az network application-gateway http-settings create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "web-http-settings" \
    --port 80 \
    --protocol Http \
    --cookie-based-affinity Disabled \
    --timeout 120 \
    --probe "web-health-probe" \
    --host-name $WEB_BACKEND_FQDN

# Configurar regras de roteamento
echo "üõ£Ô∏è Configurando regras de roteamento..."

# Primeiro, vamos corrigir a regra padr√£o existente
echo "üîß Atualizando regra padr√£o para usar web backend..."
az network application-gateway rule update \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "rule1" \
    --address-pool "web-backend-pool" \
    --http-settings "web-http-settings"

# Criar URL path map
echo "üó∫Ô∏è Criando URL path map..."
az network application-gateway url-path-map create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "url-path-map" \
    --default-address-pool "web-backend-pool" \
    --default-http-settings "web-http-settings"

# Adicionar regra para API no path map
echo "üìã Adicionando regra para API..."
az network application-gateway url-path-map rule create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --path-map-name "url-path-map" \
    --name "api-path-rule" \
    --paths "/api/*" \
    --address-pool "api-backend-pool" \
    --http-settings "api-http-settings"

# Criar regra de roteamento com path-based routing
echo "üö¶ Criando regra de roteamento principal..."
az network application-gateway rule create \
    --resource-group $RESOURCE_GROUP \
    --gateway-name $APP_GATEWAY_NAME \
    --name "path-based-rule" \
    --http-listener "appGatewayHttpListener" \
    --rule-type PathBasedRouting \
    --url-path-map "url-path-map" \
    --priority 2000

echo "‚úÖ Application Gateway configurado com sucesso!"
echo ""
echo "üìù Pr√≥ximos passos para HTTPS:"
echo "1. Configure um dom√≠nio personalizado apontando para: $AGW_FQDN"
echo "2. Execute o script 07-configure-ssl.sh ap√≥s configurar o dom√≠nio"
echo "3. Atualize o Traffic Manager para usar o novo endpoint"
echo ""
echo "üåê Endpoint tempor√°rio (HTTP): http://$AGW_FQDN"
echo ""
echo "‚ö†Ô∏è IMPORTANTE: Para HTTPS completo, voc√™ precisar√°:"
echo "   - Ter um dom√≠nio pr√≥prio ou usar um subdom√≠nio"
echo "   - Configurar o DNS para apontar para o Application Gateway"
echo "   - Executar o pr√≥ximo script para configurar SSL"